---
layout: default
categories: blog
tags: vim
title: My vundle - vim extentions
---

I use vim as my editor, I am far from a leet user but am comfortable with it and find it speeds up my development compared to other editors I have tried.

I dont have a hugly customised config or use a many extentions, but thought I might benifit from writing up about the extentions I do use.

vundle
======

This I use to manage my extentions. Rather than manually downloading stuff, copying to the right place and removing if it does not workout, I let Vundle handle it.
I tell Vundle about the extentions I want in my vim config then tell Vundle to install it, my workflow goes something like:

- Add name of extention to vim config (.vimrc)

`Plugin 'EXTENTION/NAME'`

- Open vim

    $ vim

- Give vim a command to install my extentions

    : BundleInstall

ctags
=====

For this you need a package installed on your machine called `ctags`, this program can read code and output and effective "source map", so vim knows where functions are defined.

The command `ctags` needs to be run on a project before vim can use its "source map" to be able to find where functions are defined, for this is do.

    : Rtags

Now vim knows about where things are, use it to jump to different parts of the code.

Move the cursor over a function call and hit `Ctrl+]` .. you can jump back with `Ctrl+t`

nerdtree
========

https://github.com/scrooloose/nerdtree

Can be handy if I open a directory and want to browse in classic tree view style.

To open nerdtree

    : NT

To open a file in a tab, highlight and press `t`

powerline
=========

https://github.com/Lokaltog/vim-powerline

This provides a more useful status line in vim

ctrlp
=====

https://github.com/kien/ctrlp.vim

This is really good for finding files, just hit `Ctrl+p`

Start start typing stuff to find the file you want, use `Ctrl` with the vim nav keys to choose file.

Open the file in a tab with `Ctrl+t`

ack
===

https://github.com/mileszs/ack.vim

I use `ack` all the time on the command line, this gives you the same functionally but from within vim.

    : Ack SEARCHTHIS ./path

When ack has found stuff, you can open it in using `o` or in a tab using `t`

git-time-lapse
==============

You can read about this [here](http://bugthing.github.io/blog/2014/01/21/git_time_lne.html)

vim-surround
============

https://github.com/tpope/vim-surround

Being a developer I often have to surround things in quotes, this helps me do that.

To change `"hello mate" with `'hello mate'`, move inside the double quotes and do `cs"'`

